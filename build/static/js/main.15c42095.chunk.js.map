{"version":3,"sources":["components/Header.js","components/DisplayBoard.js","components/Movies.js","components/CreateMovie.js","services/MovieService.js","App.js","serviceWorker.js","components/AppError.js","index.js"],"names":["Header","React","createElement","style","width","padding","backgroundColor","color","textAlign","boxShadow","borderRadius","className","DisplayBoard","_ref","numberOfMovies","getAllMovies","textShadow","type","onClick","e","Movies","movies","searchText","setSearchText","useState","searchResults","setSearchResults","isSearching","setIsSearching","length","MovieRow","movie","index","key","title","genre","director","release_year","movieTable","map","display","justifyContent","alignItems","fontSize","border","marginRight","placeholder","value","onChange","target","async","response","fetch","concat","data","json","returnCode","error","console","colSpan","CreateMovie","onChangeForm","createMovie","htmlFor","name","id","aria-describedby","App","setMovie","setMovies","setNumberOfMovies","useEffect","then","log","method","headers","body","JSON","stringify","fetchAllMovies","Boolean","window","location","hostname","match","ErrorComponent","AppError","Component","constructor","arguments","state","hasError","componentDidCatch","info","this","setState","render","children","props","getDerivedStateFromError","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.15c42095.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n\n    const headerStyle = {\n        width: '100%',\n        padding: '2%',\n        backgroundColor: '#3498db', // สีน้ำเงิน\n        color: 'white',\n        textAlign: 'center',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)', // เพิ่มเงา\n        borderRadius: '10px', // เพิ่มมุมโค้ง\n      };\n    return(\n        <div style={headerStyle}>\n            <h1 className=\"header-text\">React With NodeJS</h1>\n        </div>\n    )\n}","import React from 'react'\n\nexport const DisplayBoard = ({numberOfMovies, getAllMovies}) => {\n\n    return(\n        <div style={{backgroundColor:'#87CEFA'}} className=\"display-board\">\n            <h4 style={{color: 'white' , textShadow: '2px 2px 4px rgba(0, 0, 0, 0.5)' }}>Movies Created</h4>\n            <div className=\"stroke linear-hstripes rainbow-text\">\n            {numberOfMovies}\n            </div>\n            <div className=\"btn\">\n                <button type=\"button\" onClick={(e) => getAllMovies()} className=\"btn btn-warning\">Get all Movies</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport \"../App.css\";\n\n\n\nexport const Movies = ({ movies }) => {\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`http://api.se-rmutl.net/api/movie/search?search_text=${searchText}`);\n      const data = await response.json();\n\n      if (data.returnCode === 1) {\n        setSearchResults(data.data);\n        setIsSearching(true);\n      } else {\n        setSearchResults([]);\n        setIsSearching(false);\n      }\n    } catch (error) {\n      console.error('Error searching for movies:', error);\n    }\n  };\n\n\n  if (movies.length === 0) return null;\n\n  const MovieRow = (movie, index) => {\n    return (\n      <tr key={index} className={index % 2 === 0 ? \"odd\" : \"even\"}>\n        <td>{index + 1}</td>\n        <td>{movie.title}</td>\n        <td>{movie.genre}</td>\n        <td>{movie.director}</td>\n        <td>{movie.release_year}</td>\n      </tr>\n    );\n  };\n\n  const movieTable = isSearching ?\n    searchResults.map((movie, index) => MovieRow(movie, index)) :\n    movies.map((movie, index) => MovieRow(movie, index));\n\n  return (\n    <div className=\"container\">\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n        <div>\n          <h2>Movies</h2>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <input\n              type=\"text\"\n              className=\"Search_input\"\n              style={{\n                padding: \"10px\",\n                fontSize: \"16px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"5px\",\n                width: \"300px\",\n                marginRight: \"10px\",\n              }}\n              placeholder=\"Enter The Title Of Movie\"\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n            />\n            <button\n              className=\"btn btn-warning\"\n              style={{ padding: \"10px\", borderRadius: \"5px\" }}\n              onClick={handleSearch}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <hr />\n\n      <table className=\"table table-bordered table-hover\">\n        <thead className=\"table-dark\">\n          <tr>\n            <th>Movie Id</th>\n            <th>Title</th>\n            <th>Genre</th>\n            <th>Director</th>\n            <th>Release</th>\n          </tr>\n        </thead>\n        <tbody>\n          {movieTable}\n          {isSearching && searchResults.length === 0 && <tr><td colSpan=\"5\">No movies found</td></tr>}\n        </tbody>\n      </table>\n    </div>\n  );\n};","import React from 'react'\n\n\nconst CreateMovie = ({onChangeForm, createMovie }) => {\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-7 mrgnbtm\">\n                <h2 >Create Movie</h2>\n                <form>\n                    <div className=\"row\">\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"exampleInputEmail1\">Title</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)}  className=\"form-control\" name=\"movies_title\" id=\"movies_title\" aria-describedby=\"emailHelp\" placeholder=\"Movies Title\" />\n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"exampleInputPassword1\">Genre</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"movies_genre\" id=\"movies_genre\" placeholder=\"Genre\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"form-group col-md-12\">\n                            <label htmlFor=\"exampleInputEmail1\">Director</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"movies_director\" id=\"movies_director\" aria-describedby=\"emailHelp\" placeholder=\"Director\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"exampleInputEmail1\">Release_year</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"movies_release\" id=\"movies_release\" aria-describedby=\"emailHelp\" placeholder=\"Release\" />\n                        </div>\n                    </div>\n                    <button type=\"button\" onClick= {(e) => createMovie()} className=\"btn btn-success\">Create</button>\n                </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateMovie","\n// export async function getAllMovies() {\n//     try{\n//         const response = await fetch('http://localhost:3001/api/movies/all');\n//         return await response.json();\n//     }catch(error) {\n//         return [];\n//     }\n\n\n// }\n\n// export async function getAllMovies() {\n//     try{\n//         const response = await fetch('http://localhost:3001/api/movies/');\n//         //const response = await fetch('/api/movie/all');\n//         return await response.json();\n//     }catch(error) {\n//         return [];\n//     }\n    \n// }\n\n\n// export async function createMovie(data) {\n//     const response = await fetch('http://localhost:3001/api/movie', {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body: JSON.stringify({movie: data})\n//       })\n//     return await response.json();\n// }\n\nexport async function getAllMovies() {\n\n    try{\n        //const response = await fetch('/api/users');\n         const response = await fetch('http://localhost:4000/api/movie/all');\n        //const response = await fetch('/api/movie/all');\n        return await response.json();\n    }catch(error) {\n        return [];\n    }\n    \n}\n\n//---- ยังไม่เสร็จ ----\nexport async function createMovie(data) {\n    const response = await fetch(`http://localhost:4000/api/movie/insert`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({...data})\n      })\n    return await response.json();\n}\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport { DisplayBoard } from \"./components/DisplayBoard\";\nimport { Movies } from \"./components/Movies\";\nimport CreateMovie from \"./components/CreateMovie\";\nimport { getAllMovies, createMovie } from \"./services/MovieService\";\n\nfunction App() {\n  const [movie, setMovie] = useState({});\n  const [movies, setMovies] = useState([]);\n  const [numberOfMovies, setNumberOfMovies] = useState(0);\n\n\n\n  const movieCreate = (e) => {\n    createMovie(movie).then((response) => {\n      console.log(response);\n      setNumberOfMovies(numberOfMovies + 1);\n    });\n  };\n\n  const fetchAllMovies = () => {\n    getAllMovies().then((movies) => {\n      console.log(movies);\n      setMovies(movies);\n      setNumberOfMovies(movies.length);\n    });\n  };\n\n  useEffect(() => {\n\n    getAllMovies().then((movies) => {\n      console.log(movies);\n      setMovies(movies);\n      setNumberOfMovies(movies.length);\n    });\n  }, []);\n\n  const onChangeForm = (e) => {\n    if (e.target.name === \"movies_title\") {\n      movie.title = e.target.value;\n    } else if (e.target.name === \"movies_genre\") {\n      movie.genre = e.target.value;\n    } else if (e.target.name === \"movies_director\") {\n      movie.director = e.target.value;\n    } else if (e.target.name === \"movies_release\") {\n      movie.release_year = e.target.value;\n    }\n    setMovie(movie);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <div className=\"container mrgnbtm\">\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <CreateMovie\n              movie={movie}\n              onChangeForm={onChangeForm}\n              createMovie={movieCreate}\n            ></CreateMovie>\n          </div>\n\n          <div className=\"col-md-4\">\n            <DisplayBoard\n              numberOfMovies={numberOfMovies}\n              getAllMovies={fetchAllMovies}\n            ></DisplayBoard>\n          </div>\n\n          <div className=\"col-md-12\">\n          <div className=\"row mrgnbtm\">\n            <Movies movies={movies}></Movies>\n          </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst ErrorComponent = () => {\n  return <h1>Something went wrong</h1>;\n};\n\nexport class AppError extends React.Component {\n  \n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError = error => {\n    return { hasError: true };\n  };\n\n  componentDidCatch = (error, info) => {\n    this.setState({ error, info });\n  };\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n\n    return hasError ? <ErrorComponent /> : children;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AppError } from './components/AppError';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppError>\n      <App />\n    </AppError>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}